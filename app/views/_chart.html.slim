javascript:
  const polar_areaElement = document.getElementById('polar_area');
  const polar_areaData = {
    labels: gon.labels,
    datasets: [{
      label: '',
      data: gon.data,
      backgroundColor: gon.polar_area_colors,
    }]
  };
  const polar_areaConfig = {
    type: 'pie',
    data: polar_areaData,
    options: {
      responsive: true,
      plugins: {
        scales: {
          r: {
            pointLabels: {
              display: true,
              centerPointLabels: true,
              font: {
                size: 15
              }
            }
          }
        },
        legend: {
          position: 'top',
          labels: {
            font: {
              size: 15
            }
          }
        },
        title: {
          display: true,
          text: '利用割合',
          font:{size: 20}
        }
      }
    },
  };
  if (!!polar_areaElement) {
    new Chart(polar_areaElement.getContext('2d'), polar_areaConfig);
  }

  const barElement = document.getElementById('bar');
  const barData = {
    labels: gon.bar_labels,
    datasets: [
    {
      label: '収入',
      data: gon.incomed_items_dayly_sum,
      backgroundColor: '#9bcaeb',
    },
    {
      label: '支出',
      data: gon.outcomed_items_dayly_sum,
      backgroundColor: '#ec9ea5',
    },
    ]
  };
  const barConfig = {
    type: 'bar',
    data: barData,
    options: {
      responsive: true,
      scales: {
        x: { display: true, title: {display: true, text: '日付', font: {size: 15}} },
        y: { display: true, title: {display: true, text: '金額', font: {size: 15}} },
      },
      plugins: {
        legend: {
          position: 'top',
          labels: {
            font: {
              size: 15
            }
          }
        },
        title: {
          display: true,
          text: '利用推移',
          font:{size: 20}
        }
      }
    },
  };
  if (!!barElement) {
    new Chart(barElement.getContext('2d'), barConfig);
  }

  let lineElement = document.getElementById('line');
  var line_labels = gon.line_labels
  var incomed_monthly_sum = gon.incomed_monthly_sum
  var outcomed_monthly_sum = gon.outcomed_monthly_sum
  const months_limit = gon.months_diff > 20 ? 20 : 0
  const lineData = () => { 
  return ({
    labels: gon.line_labels.slice(months_limit, gon.months_diff),
    datasets: [
    {
      label: '収入',
      data: gon.incomed_monthly_sum.slice(months_limit, gon.months_diff),
      borderColor: '#9bcaeb',
      backgroundColor: '#9bcaeb',
    },
    {
      label: '支出',
      data: gon.outcomed_monthly_sum.slice(months_limit, gon.months_diff),
      borderColor: '#ec9ea5',
      backgroundColor: '#ec9ea5',
    },
    ]
  })};
  const lineConfig = () => {return ({
    type: 'bar',
    data: lineData(),
    options: {
      responsive: true,
      scales: {
        x: { display: true, title: {display: true, text: '年月', font: {size: 15}} },
        y: { display: true, title: {display: true, text: '金額', font: {size: 15}} },
      },
      plugins: {
        legend: {
          position: 'top',
        },
        title: {
          display: true,
          text: '年間収支',
          font:{size: 20}
        },
        ticks: {
          autoSkip: true,
          maxTicksLimit: 20,
          maxRotation: 0,
          minRotation: 0,
        },
      },
    },
  })}

  if (!!lineElement) {
    const lineChart = new Chart(lineElement.getContext('2d'), lineConfig());
    const selectMonthsCountElement = document.getElementById('select_months_count');
      if (!!selectMonthsCountElement) {
        selectMonthsCountElement.value = 20
        const event = 'ontouchstart' in window ? 'touchstart' : 'click';
        selectMonthsCountElement.addEventListener(event, (e) => {
          const val = e.target.value
          lineChart.config.data = {
          labels: line_labels.slice(val,gon.months_diff),
          datasets: [
          {
            label: '収入',
            data: incomed_monthly_sum.slice(val,gon.months_diff),
            borderColor: '#9bcaeb',
            backgroundColor: '#9bcaeb',
          },
          {
            label: '支出',
            data: outcomed_monthly_sum.slice(val,gon.months_diff),
            borderColor: '#ec9ea5',
            backgroundColor: '#ec9ea5',
          },]
          }

          lineChart.update()
        })
      }
  } else {
    const lineChartCursorElement = document.getElementById('line_chart_cursor');
    if (!!lineChartCursorElement) {
      lineChartCursorElement.style.display = 'none';
    }
  }
